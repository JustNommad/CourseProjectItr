@model CourseProjectItr.Models.Items
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
@{
    ViewBag.Title = Localizer["ItemPage"];
}

<link rel="stylesheet" href="~/css/itemPage.css" />
<input hidden id="userName" value="@User.Identity.Name" />
<input hidden id="itemID" value="@Model.Id" />

<div class="image-item">
    @if (Model.ImageUrl != null)
    {
        <img src="@Url.Content(Model.ImageUrl)" alt="Image" style="width: 18%;max-height: 100%;" />
    }
<div class="mainfield">
    <h1>@Model.Name</h1>
    <h2 class="text-muted">@Model.Review</h2>
    <h2 class="text-muted">@Model.Tags</h2>
    <table>
        <tbody>
            @for (int i = 0; i < ViewBag.Collection.Count && i < ViewBag.Item.Count; i++)
            {
                <tr class="text-muted"><th>@ViewBag.Collection[i]</th><td>@ViewBag.Item[i]</td></tr>
            }
        </tbody>
    </table>
    <div class="likeButton" id="likeInputForm">
        <input class="btn btn-outline-success my-2 my-sm-0" type="button" id="sendLikeBtn" value="@Localizer["Like"]">
    </div>
    <div class="likeField">
        <label class="controle-label likeLable text-muted">@Localizer["Like"]: @ViewBag.Likes</label>
    </div>
</div>
</div>
<hr />
<div class="container">
    <form>
        <table>
            @foreach (var c in ViewBag.Comments)
            {
                <div class="modal-dialog" role="document">
                    <div class="modal-content text-white bg-dark">
                        <div class="modal-header">
                            <h5 class="modal-title">
                                @c.UserName
                            </h5>
                        </div>
                        <div class="modal-body">
                            <div class="container-fluid">
                                <span>
                                    @c.Comment
                                </span>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </table>
        <div id="commentList"></div>

        <div id="inputForm">
            <label class="controle-label">@Localizer["InputComment"]:</label>
            <input type="text" class="form-control" id="message" />
            <input class="btn btn-outline-success my-2 my-sm-0" placeholder="@Localizer["InputComment"]" aria-lable="@Localizer["InputComment"]"
                   type="button" id="sendCommentBtn" value="Input">
        </div>

        <script src="~/js/signalr.min.js"></script>
        <script>
            const hubConnection = new signalR.HubConnectionBuilder()
                .withUrl("/chat")
                .build();

            hubConnection.on('SendComment', function (message, userName, itemID) {
                if (itemID == document.querySelector('#itemID').value) {

                const comment = document.createElement('div');
                comment.innerHTML = `<div class="modal-dialog" role="document">
                    <div class="modal-content text-white bg-dark">
                        <div class="modal-header">
                            <h5 class="modal-title">
                            ${userName}
                            </h5>
                        </div>
                        <div class="modal-body">
                            <div class="container-fluid">
                                <span>
                                ${message}
                                </span>
                            </div>
                        </div>
                    </div>
                </div>`;
                document.querySelector("#commentList").appendChild(comment);
                };
            });

            hubConnection.on('SendLike', function (likes) {
                document.getElementById("likeField").value = likes;
            })

            document.getElementById("sendLikeBtn").addEventListener("click", async function (e) {
                let itemID = document.getElementById("itemID").value;
                const result = await fetch('/User/Like', {
                    method: 'POST',
                    headers: {
                        'Accept': 'application/json',
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        ItemID: itemID,
                        Choise: "true"
                    })
                });
                if (result.ok === true) {
                    const res = await result.json();
                    hubConnection.invoke("SendLike", res.like);
                }
            });

            document.getElementById("sendCommentBtn").addEventListener("click", async function (e) {
                let message = document.getElementById("message").value;
                let itemID = document.getElementById("itemID").value;
                let userName = document.getElementById("userName").value;
                const result = await fetch('/User/Comment', {
                    method: 'POST',
                    headers: {
                        'Accept': 'application/json',
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        UserName: userName,
                        ItemID: itemID,
                        Comment: message
                    })
                });
                if (result.ok === true) {
                    const res = await result.json();
                    hubConnection.invoke("SendComment", res.comment, res.userName, res.itemId);
                }
            });
            hubConnection.start();
        </script>
    </form>
</div>
